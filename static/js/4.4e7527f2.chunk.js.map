{"version":3,"sources":["components/Hoc/withAuthRedirect.jsx","components/Friends/FriendsItem/FriendsItem.module.css","components/Friends/FriendsMess/FriendsMess.module.css","components/Friends/Friends.module.css","components/Friends/FriendsItem/FriendsItem.jsx","components/Friends/FriendsMess/FriendsMess.jsx","components/Friends/Friends.jsx","components/Friends/FriendsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","FriendsItem","className","s","frItem","iconFr","src","frname","id","name","FriendsMess","frmess","fricon","mess","message","maxLength20","maxLenghtCreator","AddFriendsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Friends","friendsElement","friends","map","f","frmessElement","friendsMess","fm","friendspag","values","SendFriendsClick","newMessageFriends","compose","sidebar","dispatch","sendFriendsActionCreator"],"mappings":"gOAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBCf7EM,EAAOC,QAAU,CAAC,OAAS,4BAA4B,OAAS,4BAA4B,OAAS,8B,oBCArGD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,OAAS,4BAA4B,KAAO,4B,oBCAnGD,EAAOC,QAAU,CAAC,WAAa,8B,kFCehBC,EAZK,SAACN,GACjB,OACI,sBAAKO,UAAWC,IAAEC,OAAlB,UACI,qBAAKF,UAAWC,IAAEE,OAAlB,SACI,qBAAKC,IAAI,gEAEb,qBAAKJ,UAAWC,IAAEI,OAAlB,SACI,cAAC,IAAD,CAASX,GAAI,YAAcD,EAAMa,GAAjC,SAAsCb,EAAMc,a,kBCO7CC,EAfK,SAACf,GAGjB,OACI,sBAAKO,UAAWC,IAAEQ,OAAlB,UACI,qBAAKT,UAAWC,IAAES,OAAlB,SACI,qBAAKN,IAAI,iGAEb,qBAAKJ,UAAWC,IAAEU,KAAlB,SACKlB,EAAMmB,c,oDCqBjBC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAK,qBAAhBD,EAdL,SAACvB,GACpB,OACI,uBAAMyB,SAAUzB,EAAM0B,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOb,KAAM,oBAAqBc,UAAWC,IAAUC,YAAa,kBACpEC,SAAU,CAACC,IAAUZ,OAEzB,8BACI,gEAQDa,EA3CC,SAACjC,GACb,IAAIkC,EAAiBlC,EAAMmC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAavB,KAAMuB,EAAEvB,KAAMD,GAAIwB,EAAExB,QACzEyB,EAAgBtC,EAAMuC,YAAYH,KAAI,SAAAI,GAAE,OAAI,cAAC,EAAD,CAAarB,QAASqB,EAAGrB,QAASN,GAAI2B,EAAG3B,QAOzF,OACI,sBAAKN,UAAWC,IAAEiC,WAAlB,UAEI,8BACKP,IAEL,8BACKI,IAEN,8BACI,cAAChB,EAAD,CAAqBG,SAdP,SAACiB,GACtB1C,EAAM2C,iBAAiBD,EAAOE,4B,iCCYvBC,sBAAQ1C,aAlBD,SAACV,GACnB,MAAM,CACFmD,kBAAkBnD,EAAMqD,QAAQF,kBAChCT,QAAQ1C,EAAMqD,QAAQX,QACtBI,YAAY9C,EAAMqD,QAAQP,gBAKV,SAACQ,GACrB,MAAM,CACFJ,iBAAkB,SAACC,GACfG,EAASC,YAAyBJ,SAMwBhD,IAAvDiD,CAAyEZ","file":"static/js/4.4e7527f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frItem\":\"FriendsItem_frItem__HlRDx\",\"iconFr\":\"FriendsItem_iconFr__17ZYU\",\"frname\":\"FriendsItem_frname__ZZ49S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frmess\":\"FriendsMess_frmess__2TVli\",\"fricon\":\"FriendsMess_fricon__CqBeE\",\"mess\":\"FriendsMess_mess__4MFDJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendspag\":\"Friends_friendspag__D549c\"};","import React from 'react';\r\nimport s from './FriendsItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst FriendsItem = (props) => {\r\n    return (\r\n        <div className={s.frItem}>\r\n            <div className={s.iconFr}>\r\n                <img src='https://image.flaticon.com/icons/png/512/1884/1884203.png'/>\r\n            </div>\r\n            <div className={s.frname}>\r\n                <NavLink to={\"/friends/\" + props.id}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default FriendsItem;","import React from 'react';\r\nimport s from './FriendsMess.module.css'\r\n\r\nconst FriendsMess = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={s.frmess}>\r\n            <div className={s.fricon}>\r\n                <img src='https://www.pngfind.com/pngs/m/24-247995_like-png-icon-love-icon-round-png-transparent.png'/>\r\n            </div>\r\n            <div className={s.mess}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsMess;","import React from 'react';\r\nimport FriendsItem from \"./FriendsItem/FriendsItem\";\r\nimport FriendsMess from \"./FriendsMess/FriendsMess\";\r\nimport s from './Friends.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControl/FormsControls\";\r\nimport {maxLenghtCreator, required} from \"../../Utils/Validators/validators\";\r\n\r\nconst Friends = (props) => {\r\n    let friendsElement = props.friends.map(f => <FriendsItem name={f.name} id={f.id}/>);\r\n    let frmessElement = props.friendsMess.map(fm => <FriendsMess message={fm.message} id={fm.id}/>);\r\n\r\n\r\n    let onNewMessageFriend = (values) => {\r\n        props.SendFriendsClick(values.newMessageFriends);\r\n    }\r\n\r\n    return (\r\n        <div className={s.friendspag}>\r\n\r\n            <div>\r\n                {friendsElement}\r\n            </div>\r\n            <div>\r\n                {frmessElement}\r\n            </div>\r\n           <div>\r\n               <AddFriendsReduxForm onSubmit={onNewMessageFriend}/>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength20 = maxLenghtCreator(20);\r\n\r\nconst AddFriendsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={\"newMessageFriends\"} component={Textarea} placeholder={\"Messages friend\"}\r\n                validate={[required, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add messege friend</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddFriendsReduxForm = reduxForm({form:\"friendsAddMessage\"})(AddFriendsForm)\r\n\r\nexport default Friends;","import React from 'react';\r\nimport Friends from \"./Friends\";\r\nimport {sendFriendsActionCreator} from \"../../redux/sidebar-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        newMessageFriends:state.sidebar.newMessageFriends,\r\n        friends:state.sidebar.friends,\r\n        friendsMess:state.sidebar.friendsMess,\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch) => {\r\n    return{\r\n        SendFriendsClick: (newMessageFriends) => {\r\n            dispatch(sendFriendsActionCreator(newMessageFriends))\r\n        },\r\n\r\n    }\r\n}\r\n\r\nexport default compose(connect (mapStateToProps, mapDispatchToProps), withAuthRedirect)(Friends);"],"sourceRoot":""}