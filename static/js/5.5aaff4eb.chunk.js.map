{"version":3,"sources":["components/Hoc/withAuthRedirect.jsx","components/Users/users.module.css","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Users","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","all","number","paginator","onClick","filter","p","map","currentPage","selectedPage","e","onPageChanged","users","u","id","src","photos","small","userPhoto","followed","disabled","followingInProgress","some","unfollow","follow","name","status","large","gotUsers","usersPage","gotPageSize","gotTotalUsersCount","totalUsersCount","gotCurrentPage","gotIsFetching","isFetching","gotFollowingInProgress","gotIsAuth","UsersContainer","pageNumber","setCurrentPage","getUsers","Preloader","toggelFollowingProgress","compose","requestUsers"],"mappings":"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","file":"static/js/5.5aaff4eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2LMux\",\"all\":\"users_all__3OlTA\",\"selectedPage\":\"users_selectedPage__15ffX\",\"number\":\"users_number__2GLF4\"};","import React, {useState} from 'react';\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user-icon.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n    let portionSize =10;\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (<div className={s.all}>\r\n        <div className={s.number}>\r\n\r\n            <div className={s.paginator}>\r\n                { portionNumber > 1 &&\r\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                    .map((p) => {\r\n                        return <span className={props.currentPage === p && s.selectedPage}\r\n                                     key={p}\r\n                                     onClick={(e) => {\r\n                                         props.onPageChanged(p);\r\n                                     }}> {p} </span>\r\n                    })}\r\n                { portionCount > portionNumber &&\r\n                <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n            </div>\r\n        </div>\r\n\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <img src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                                     className={s.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                      {u.followed\r\n                          ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n\r\n                              props.unfollow(u.id);\r\n\r\n                          }}>Unfollow</button>\r\n                          : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n\r\n                              props.follow(u.id);\r\n\r\n                          }}>Follow</button>}\r\n                    </div>\r\n                    </span>\r\n                <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                         <div>{u.id}</div>\r\n                    </span>\r\n                <span>\r\n                        <div>{u.photos.small}</div>\r\n                        <div>{u.photos.large}</div>\r\n                    </span>\r\n\r\n            </div>)\r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default Users;","export const gotUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const gotPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const gotTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const gotCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const gotIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const gotFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const gotIsAuth = (state) => {\r\n    return state.auth.isAuth\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage,\r\n    toggelFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader\";\r\nimport {withAuthRedirect} from \"../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    gotCurrentPage,\r\n    gotFollowingInProgress, gotIsAuth,\r\n    gotIsFetching,\r\n    gotPageSize,\r\n    gotTotalUsersCount,\r\n    gotUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n\r\n    }\r\n\r\n    render(props) {\r\n\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalItemsCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage} users={this.props.users}\r\n                       unfollow={this.props.unfollow} follow={this.props.follow}\r\n                       isFetching={this.props.isFetching}\r\n                       followingInProgress={this.props.followingInProgress}\r\n                       toggelFollowingProgress={this.props.toggelFollowingProgress}\r\n                       onPageChanged={this.onPageChanged}/>\r\n            </>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: gotUsers(state),\r\n        pageSize: gotPageSize(state),\r\n        totalUsersCount: gotTotalUsersCount(state),\r\n        currentPage: gotCurrentPage(state),\r\n        isFetching: gotIsFetching(state),\r\n        followingInProgress: gotFollowingInProgress(state),\r\n        isAuth: gotIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps,\r\n    {\r\n        follow, unfollow, setCurrentPage,\r\n        toggelFollowingProgress, getUsers: requestUsers\r\n    }), withAuthRedirect)(UsersContainer);"],"sourceRoot":""}